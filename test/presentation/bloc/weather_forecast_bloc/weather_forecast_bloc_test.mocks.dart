// Mocks generated by Mockito 5.3.0 from annotations
// in weather_application/test/presentation/bloc/weather_forecast_bloc/weather_forecast_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_application/data/models/request/getWeatherForecastRequest.dart'
    as _i5;
import 'package:weather_application/data/models/response/weather_forecst_response/weather_forecast_response.dart'
    as _i2;
import 'package:weather_application/domain/contracts/weather_forecast_repository_interface.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherForecastResponse_0 extends _i1.SmartFake
    implements _i2.WeatherForecastResponse {
  _FakeWeatherForecastResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [IWeatherForecastRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIWeatherForecastRepository extends _i1.Mock
    implements _i3.IWeatherForecastRepository {
  MockIWeatherForecastRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.WeatherForecastResponse> getWeatherForecast(
          {_i5.GetWeatherForecastRequest? request}) =>
      (super.noSuchMethod(
              Invocation.method(#getWeatherForecast, [], {#request: request}),
              returnValue: _i4.Future<_i2.WeatherForecastResponse>.value(
                  _FakeWeatherForecastResponse_0(
                      this,
                      Invocation.method(
                          #getWeatherForecast, [], {#request: request}))))
          as _i4.Future<_i2.WeatherForecastResponse>);
}
