// Mocks generated by Mockito 5.3.0 from annotations
// in weather_application/test/presentation/bloc/location_cubit/location_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_application/common/library_wrappers/geolocator_wrapper.dart'
    as _i5;
import 'package:weather_application/data/models/location.dart' as _i2;
import 'package:weather_application/domain/contracts/location_repository_interface.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocation_0 extends _i1.SmartFake implements _i2.Location {
  _FakeLocation_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [ILocationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockILocationRepository extends _i1.Mock
    implements _i3.ILocationRepository {
  MockILocationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Location> getCurrentLocation(
          {int? distanceFilter,
          Duration? timeLimit,
          _i5.GeolocatorWrapperAccuracy? accuracy}) =>
      (super
          .noSuchMethod(Invocation.method(#getCurrentLocation, [], {#distanceFilter: distanceFilter, #timeLimit: timeLimit, #accuracy: accuracy}),
              returnValue: _i4.Future<_i2.Location>.value(_FakeLocation_0(
                  this,
                  Invocation.method(#getCurrentLocation, [], {
                    #distanceFilter: distanceFilter,
                    #timeLimit: timeLimit,
                    #accuracy: accuracy
                  })))) as _i4.Future<_i2.Location>);
}
